image: openjdk:10.0.1-slim

variables:
 SERVICE_NAME: 'sjbot'
 DEPLOY_PATH: '/home/so/services/$SERVICE_NAME'
 SERVICE_DIST_FILE_PATH: 'build/libs/*.jar'

before_script:
 - apt-get update
 - apt-get install -y --no-install-recommends git openssh-client zip
 - eval $(ssh-agent -s)
 - echo "$SSH_PRIVATE_KEY" | ssh-add - > /dev/null
 - mkdir -p ~/.ssh
 - chmod 700 ~/.ssh

stages:
 - build_and_test
 - deploy_prod

build_and_test:
 stage: build_and_test
 artifacts:
  untracked: true
 script:
   - chmod +x ./gradlew
   - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/sogroup/intention-core.git
   - cd ./intention-core 
   - chmod +x ./gradlew
   - ./gradlew publish && cd ../
   - ./gradlew clean build

 tags:
   - test

deploy_prod:
 variables:
  DEPLOY_HOST: 'root@68.183.115.12'
  DEPLOY_PATH: '/root/services/$SERVICE_NAME'
  DIST_FILE: '$SERVICE_NAME-distribution.jar'
  DOCKER_IMAGE_NAME: '$SERVICE_NAME/java'
  SPRING_ACTIVE_PROFILE: 'prod'
 stage: deploy_prod
 when: manual
 dependencies:
  - build_and_test
 script:
   - echo "Start DEPLOY"
   - ssh -o StrictHostKeyChecking=no $DEPLOY_HOST 'exit'
   - ssh $DEPLOY_HOST "rm -rf $DEPLOY_PATH/*"
   - ssh $DEPLOY_HOST "mkdir -p $DEPLOY_PATH/"
   - zip -r $DIST_FILE Dockerfile docker-compose.yml $SERVICE_DIST_FILE_PATH
   - scp $DIST_FILE $DEPLOY_HOST:$DEPLOY_PATH/
   - ssh $DEPLOY_HOST "unzip $DEPLOY_PATH/$DIST_FILE -d $DEPLOY_PATH/"
   - ssh $DEPLOY_HOST "rm $DEPLOY_PATH/$DIST_FILE"
   
   - echo $DEPLOY_HOST
   - ssh -p 22 $DEPLOY_HOST "docker system prune -f"
   - ssh $DEPLOY_HOST "cd $DEPLOY_PATH/ && docker-compose down && docker-compose up -d --build"
   - echo "Deploy prod finished"
 tags:
   - prod
